#Έστω μία σκακίερα στην οποία τοποθετούμε πάνω της, σε τυχαίες θέσεις,
#έναν λευκό πύργο και αξιωματικό και μια μαύρη βασίλισσα.
#Ο κάθε παίκτης παίρνει ως δυο βαθμούς σε κάθε γύρο ανάλογα με το αν
#τρώει κομμάτι του αντιπάλου. Έτσι, ο λευκός μπορεί να πάρει 2 βαθμούς αν
#Αν μόνο ένα από τα κομμάτια του τρώει τη βασίλισσα τότε παίρνει ένα βαθμό.
#Αντίστοιχα, ο μαύρος παίρνει δύο βαθμούς αν η βασίλισσά του
#μπορεί να φάει και τα δύο κομμάτια του λευκού ή
#ένα αν μπορεί να φάει μόνο ένα.
#Μετά από 100 παιχνίδια, εμφανίστε τους βαθμούς των δύο παικτών.





import random
	
#Σταθερές για την βασίλισσα, τον αξιοματικό και τον πύργο
Q=1
A=1
P=1
#Πρόσθεση των κενών θέσεων και τον θέσεων που είναι το κάθε πιόνι
#σε μία λίστα 64 θέσεων
tmp=["0"]*(64-Q-A-P)
tmp+=["Q"]*Q
tmp+=["A"]*A
tmp+=["P"]*P
pa=0
pm=0


#για τα 100 παιχνίδια
for i in range (100):
    #Ανακάτεμα
    random.shuffle(tmp)
    board=[]
    #Από τις 64 στοιχεία,βάζει 8-8 τα στοιχεία στη σκακιέρα
    for i in range(8):
            board+=[tmp[8*i:8*i+8]]
    #print_board(board)
    #for i in range(8):
        #print ("  ".join(board[i]))


    #εκχωρεί σε μεταβλητές τις θέσεις των Q,Α και P
            
    for i in range (8):
        for j in range (8):
            if board[i][j]=="Q":
                qi=i
                qj=j
            if board[i][j]=="A":
                ai=i
                aj=j
            if board[i][j]=="P":
                pi=i
                pj=j


    #ελέγχει αν ο πύργος απειλεί την βασίλισσα,αν ο αξιωματικός
    #απειλεί την βασίλισσα ή και οι 2
    #αν η βασίλισσα απειλεί τον αξιωματικό, αν βασσίλισα απειλεί τον πύργο
    #ή αν απειλεί και τους 2


    if abs(ai-qi)==abs(aj-qj):
        pa+=1
    if (pi==qi) or (pj==qj):
        pa+=1
    if abs(ai-qi)==abs(aj-qj) or ((ai==qi) or (aj==qj)):
        pm+=1        
    if abs(pi-qi)==abs(pj-qj) or ((pi==qi) or (pj==qj)):
        pm+=1

#Εκτύπωση αποτελεσμάτων
print("Οι βαθμοί είναι: ",pa," και ",pm)
